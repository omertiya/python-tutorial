
***********************************
clear all the button and label in the frame
*******************************************


    for child in comparative_bid_analysis_canvas_frame.winfo_children(): #to clear all the button and label in the frame
        child.destroy()



************************************
GRAPHICAL USER INTERFACE
************************************
-------------------------------------------------------------------
TKINTER
------------------------------------------------------------------
tkinter = is a python binding to the TK GUI toolkit.it is the standard python interface to the Tk GUI toolkit.
          and is python standard GUI . tkinter is included with standard (Linux, Microsoft Windows and Mac OS x installs of python.

widgets = GUI elements (button,texboses,labels,images)
windows = serves as a container to hold or these widgets

from  tkinter import *

window=Tk() #instantiate an instance of a window
window.geometry("450x450")
window.title("Omer tiya first GUI program")
icon=PhotoImage(file="ahmed.gif")
window.iconphoto(True,icon)
window.configure(background="blue")

window.mainloop() #place window on computer screen , listen for events

--------------------------------------------------------------------------
LABEL
-------------------------------------------------------------------------
label = an area widget that holds text and/or and image within a window

from tkinter import *

window=Tk()
photo_path=PhotoImage(file="F:\\omer_tiya python book\\py_book projacet\\main_py_book\\main\\ahmed.gif")
photo=PhotoImage(file="ahmed.gif")
label=Label(window,
            text="Hello",
            font=("Arial",40,"bold"),
            foreground="#00ff00",
            background="black",
            relief=RAISED,
            borderwidth=10,
            padx=20,
            pady=10,
            image=photo_path,
            compound=BOTTOM

            )
label.pack()
label.place(x=0,y=0)

window.mainloop()


-----------------------------------------------------------------------------------------------------
BUTTON
-----------------------------------------------------------------------------------------------------
button = you click it , then it does stuff

from tkinter import *
count=0
def click():
    global count
    count+=1
    print(count)
    if count==7:
        button.configure(state=DISABLED)
        print("button has peen disabled")

window=Tk()
photo=PhotoImage(file="ahmed.gif")
button=Button(window,
              text="click me",
              command=click,
              font=("Comic sans",30),
              foreground="#00ff00",
              background="black",
              activeforeground="red",
              activebackground="green",
              state=ACTIVE,
              image=photo,
              compound="right"
              )
button.pack()
window.mainloop()

"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
1
2
3
4
5
6
7
button has peen disabled

Process finished with exit code 0

---------------------------------------------------------------------------------------------
ENTRY WIDGET
---------------------------------------------------------------------------------------------
entry widget = textbox thar accepts a single line of user input

from tkinter import *

def submit():
    text=entry.get()
    print(text)
    entry.configure(show="*",state=DISABLED)
def delete():
    entry.delete(0,END)

def backspace():
    entry.delete(len(entry.get())-1,END)


window=Tk()
entry=Entry(window,
            font=("Arial",50),
            foreground="#00ff00",
            background="black",

            )
entry.insert(0,"Name: ")
entry.pack(side=LEFT)

submit_button=Button(window,text="submit",command=submit)
submit_button.pack(side=RIGHT )

delete_button=Button(window,text="delete",command=delete)
delete_button.pack(side=RIGHT )

backspace_button=Button(window,text="backspace",command=backspace)
backspace_button.pack(side=RIGHT)

window.mainloop()


"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
Name: omer tiya

Process finished with exit code 0



--------------------------------------------------------------------------------------------------------
CHECK BUTTON
------------------------------------------------------------------------------------------------------

from tkinter import *

def display():
    if x.get()==1:
        print("I agree to something")
    elif x.get()==0:
        print("i disagree ")
    else:
        print("what!!!")



window=Tk()
x=IntVar()
photo=PhotoImage(file="ahmed_2.gif")
check_button=Checkbutton(window,
                         text="i agree to something",
                         variable=x,
                         onvalue=1,
                         offvalue=0,
                         command=display,
                         font=("Arial",20),
                         foreground="#00ff00",
                         background="black",
                         activebackground="black",
                         activeforeground="green",
                         padx=20,
                         pady=10,
                         image=photo,
                         compound=LEFT)
check_button.pack()


window.mainloop()


"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
I agree to something
i disagree
I agree to something
i disagree

Process finished with exit code 0


-----------------------------------------------------------------------------------------------------------
RADIO BUTTON
-----------------------------------------------------------------------------------------------------------
radio button = similar to checkbutton, but you can only select on form a group

from tkinter import *

food=["pizza","hamburger","hotdog"]
def order():
    if x.get()==0:
        print("you orderd pizza")
    elif x.get()==1:
        print("you ordered a hamburger")
    elif x.get()==2:
        print("you ordered a hotdog")
    else:
        print("huh??")

window=Tk()
photo1=PhotoImage(file="ahmed.gif")
photo2=PhotoImage(file="baik.gif")
photo3=PhotoImage(file="babay.gif")
photos=[photo1,photo2,photo3]
x=IntVar()
for index in range(len(food)):
    radiobutton=Radiobutton(window,
                            text=food[index], #adds text to radio button
                            variable=x,       #groups radiobutton together if they share the same variable
                            value=index,      #assigns each radiobutton a different value
                            padx=25,          #adds padding on x-axis
                            font=("Impact",50),
                            image=photos[index],#add image to radiobutton
                            compound="left",    #adds image and text (left side)
                            indicatoron=False,     #eliminate circle indicators
                            width=399,         #sets width of radio buttons
                            command=order)     #set command of radiobutton to function
    radiobutton.pack(anchor="w")



window.mainloop()


"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
you orderd pizza
you ordered a hamburger
you ordered a hotdog

Process finished with exit code 0
---------------------------------------------------------------------------------------------------------------
SCALE
------------------------------------------------------------------------------------------------------------------

from tkinter import *

def submit():
    print("the temperature is:"+str(scale.get())+" degrees C")

window=Tk()
photo1=PhotoImage(file="babay.gif")
label1=Label(window,image=photo1)
label1.pack()
scale=Scale(window,
            from_=100,
            to=0,length=500,
            showvalue=False, #hide current value
            tickinterval=10, #adds numeric indicators for value
            orient=VERTICAL, #orientation of scale
            font=("Consolas",20),
            troughcolor="red",
            background="black",
            foreground="#00ff00",
            resolution=1

            )
scale.set((scale["from"]-scale["to"])/2+scale["to"]) #set current value of slider
scale.pack()
button=Button(window,text="submit",command=submit)
button.pack()
window.mainloop()

"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
the temperature is:87 degrees C
the temperature is:29 degrees C
the temperature is:51 degrees C

Process finished with exit code 0

------------------------------------------------------------------------------------------------------
LISTBOX
-------------------------------------------------------------------------------------------------------

listbox = a listing of selectable text items within it's own container

from tkinter import *

def submit():
    print("you have ordered: ")
    for index in listbox.curselection():
        print(listbox.get(index))


def add():
    listbox.insert(listbox.size(),entry_box.get())
    listbox.configure(height=listbox.size())

def delete():
    for index in reversed(listbox.curselection()):
        listbox.delete(index)
    listbox.delete(listbox.curselection())
    listbox.configure(height=listbox.size())
window=Tk()

listbox=Listbox(window,
                background="#f7ffde",
                font=("Constantia",35),
                width=12,
                selectmode=MULTIPLE)
listbox.pack()

listbox.insert(1,"pizza")
listbox.insert(2,"pasta")
listbox.insert(3,"garlic bread")
listbox.insert(4,"soup")
listbox.insert(5,"salad")

listbox.configure(height=listbox.size())

entry_box=Entry(window)
entry_box.pack()
add_button=Button(window,text="add",command=add)
add_button.pack()
submit_button=Button(window,text="submit",command=submit)
submit_button.pack()
delete_button=Button(window,text="delete",command=delete)
delete_button.pack()
window.mainloop()


"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
you have ordered:
pizza
pasta
garlic bread
salad

Process finished with exit code 0



---------------------------------------------------------------------------------------------------------------------
SCROLLBAR
-------------------------------------------------------------------------------------------------------------

from tkinter import *

window=Tk()
window.title("Listbox and Scrollbar")

listbox=Listbox(window, height=18, width=15,font=("arial",20,"bold"),justify=CENTER)
listbox.pack(side=LEFT)

scrllbar=Scrollbar(window, command=listbox.yview)

scrllbar.pack(side=RIGHT,fill=Y)
listbox.config(yscrollcommand=scrllbar.set)

for i in range(500):
    listbox.insert(i,i)


window.mainloop()



--------------------------------------------------------------------------------------------------------
SPINBOX
-----------------------------------------------------------------------------------------------------------

from tkinter import *
def change(spin):

    label.config(text=spin)


window=Tk()
x=StringVar(window)
window.geometry("400x200")

spinbox1=Spinbox(window,from_=0,to=20,increment=2,textvariable=x,command=lambda :change(spinbox1.get()))
spinbox1.pack(padx=10,pady=10)
spinbox2=Spinbox(window,values=("C++","C","JAVA","C#","PYTHON","PHP"),command=lambda :change(spinbox2.get()))
spinbox2.pack(padx=10,pady=10)

label=Label(window)
label.pack()



window.mainloop()



-----------------------------------------------------------------------------------------------------------
optionMenu
-----------------------------------------------------------------------------------------------------


from tkinter import *

def print_answers():
    print(f"Q:{tkvarq.get()},A:{answer_entry.get()}")
window=Tk()
window.title("Option Menu")
window.geometry("700x500")

create the list of question
pass them into an option menu
creare an entry for answer
create submit button

questions=["what is your mother's  maiden name?",
           "who is your favorite author?",
           "what was your first pets name?",
           "what street did your grow up no"]

tkvarq=StringVar(window)
tkvarq.set(questions[0])
question_menu=OptionMenu(window,tkvarq,*questions)
question_menu.pack()

answer entry
awer_entry=Entry(window,width=30)
answer_entry.pack()

submit_button=Button(window,text="submit",command=print_answers)
submit_button.pack()


window.mainloop()



----------------------------------------------------------------------------------------------------------
Expand button
------------------------------------------------------------------------------------------------------------


from tkinter import *

window=Tk()
window.title("button expand")
window.geometry("500x500")
Config our column rows and cols

window.rowconfigure(0,weight=1)
window.columnconfigure(0,weight=1)
config row 2
window.rowconfigure(1,weight=1)

create two button

button_1=Button(window,text="Button 1")
button_2=Button(window,text="Button 2")

Grid them to the screen

button_1.grid(row=0,column=0,sticky=N+W+S+E)
button_2.grid(row=1,column=0,sticky=N+W+S+E)


window.mainloop()




--------------------------------------------------------------------------------------------------------------------
MESSAGEBOX
-----------------------------------------------------------------------------------------------------------------

from tkinter import *
from tkinter import messagebox #import messagebox library

def click():
    messagebox.showinfo(title="this is an info message box",message="you sre a person")
    messagebox.showwarning(title="WARNING",message="you hace a VIRUS!!!!")
    messagebox.showerror(title="ERROR!",message="something went weong :( ")

    if messagebox.askokcancel(title="ask ok cancel",message="do you want to do the thing "):
        print("you did a thing!")
    else:
        print("you canceled a thing!")

"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
you did a thing!
you canceled a thing!

Process finished with exit code 0

    if messagebox.askretrycancel(title="ask retry cancel",message="do you want retry the thing "):
        print("you retried a thing!")
    else:
        print("you canceled a thing!")

"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
you retried a thing!
you canceled a thing!

Process finished with exit code 0

    if messagebox.askyesno(title="ask yes or no ",message="do you like cake?"):
        print("I like cake too :) ")
    else:
        print("why do you not like cake?")

"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
I like cake too :)
why do you not like cake?

Process finished with exit code 0

    answer=messagebox.askquestion(title="ask question",message="do you like pie?")
    if answer=="yes":
        print("I like pie too :)")
    elif answer=="no":
        print("why do you not like pie? :(")

"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
I like pie too :)
why do you not like pie? :(

Process finished with exit code 0

    answer=messagebox.askyesnocancel(title="yes no cancel",message="do you like to code?",icon="warning")
    if answer==True:
        print("you like code :) ")
    elif answer==False:
        print("then why are you coding?")
    elif answer==None:
        print("you have dodged the question")

"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
you like code :)
then why are you coding?
you have dodged the question

Process finished with exit code 0

window=Tk()

button=Button(window,command=click,text="click me")
button.pack()

window.mainloop()

---------------------------------------------------------------------------------------------------------------------------
COLORCHOOSER
-------------------------------------------------------------------------------------------------------------------

from tkinter import *
from tkinter import colorchooser  #submodule
def click():
    color=colorchooser.askcolor() #assign color to a vraible
    print(color)
    colorHex=color[1]             #assigns element at index 1 to a variable
    window.configure(background=colorHex)

window=Tk()
window.geometry("400x400")
button=Button(window,text="click me",command=click)
button.pack()

window.mainloop()

"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
((0.0, 0.0, 255.99609375), '#0000ff')

Process finished with exit code 0


--------------------------------------------------------------------------------------------------------------
TEXT WIDGRT
-----------------------------------------------------------------------------------------------------------------------
text widget = functions like a text area, you cane enter multiple line of text

from tkinter import *

def submit():
    input=text.get(1.0,END)
    print(input)

window=Tk()
text=Text(window,
          bg="light yellow",
          font=("Ink free",25),
          height=8,
          width=20,
          padx=20,
          pady=20,
          fg="purple",
          )
text.pack()

button=Button(window,text="submit",command=submit)
button.pack()


window.mainloop()


"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
he drink a plenty of water
Rose are red
violests are blue
Booty booty booty booty
rockin' every where!


Process finished with exit code 0

------------------------------------------------------------------------------------------------------------------------------
OPEN FILE
-------------------------------------------------------------------------------------------------------------------------------------

from tkinter import *
from tkinter import filedialog

def open_file():
    file_path=filedialog.askopenfilename(initialdir="F:\\omer_tiya python book\\py_book projacet\\main_py_book\\main",
                                         title="open file okay?",
                                         filetypes=(("text file","*.txt"),
                                                    ("all files","*.*")))
    print(file_path)
    file=open(file_path,"r")
    print(file.read())
    file.close()
window=Tk()

button=Button(window,text="open",command=open_file)
button.pack()


window.mainloop()


"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
F:/omer_tiya python book/py_book projacet/main_py_book/main/pyth omer.txt
this is omer tiya
say hello to the world
neie to meed you


Process finished with exit code 0


--------------------------------------------------------------------------------------------------------------------------------------------
SAVE FILE
--------------------------------------------------------------------------------------------------------------------------------------------

from tkinter import *
from tkinter import filedialog

def save_file():
    file=filedialog.asksaveasfile(initialdir="F:\\omer_tiya python book\\py_book projacet\\main_py_book\\main",
                                  defaultextension=".txt",
                                  filetypes=[("text file",".txt"),
                                             ("HTML file",".html"),
                                             ("python file",".py"),
                                             ("all file",".*")])
    if file ==None:
        return
    file_text=str(text.get(1.0,END))
    file_text=input("Enter some text :")
    file.write(file_text)
    file.close()
window=Tk()

button=Button(window,text="save",command=save_file)
button.pack()

text=Text(window)
text.pack()

window.mainloop()














--------------------------------------------------------------------------------------------------------------------------------------------
FRAME
--------------------------------------------------------------------------------------------------------------------------------------------


frame = a rectanglar contanier to group and hold widgets

from tkinter import *

window=Tk()
frame=Frame(window,background="pink",bd=5,relief=SUNKEN)
frame.place(x=100,y=100)

Button(frame,text="W",font=("Consolas",25),width=3).pack(side=TOP)
Button(frame,text="A",font=("Consolas",25),width=3).pack(side=LEFT)
Button(frame,text="S",font=("Consolas",25),width=3).pack(side=LEFT)
Button(frame,text="D",font=("Consolas",25),width=3).pack(side=LEFT)

window.mainloop()


from tkinter import *

def create_window():
    now_windw=Toplevel()  #Toplevel()= new window on top of ather window ,linked
    now_windw=Tk()        #Tk()= now independent window
    old_window.destroy()  #close out of old window

old_window=Tk()

Button(old_window,text="create new window",command=create_window).pack()

old_window.mainloop()


--------------------------------------------------------------------------------------------------------------------------------------------
MENU
--------------------------------------------------------------------------------------------------------------------------------------------

from tkinter import *

def open_file():
    print("you open a file")

def save_file():
    print("you save file")

def copy():
    print("you copy file")

def cut():
    print("you cut file")

def paste():
    print("you paste file")
window=Tk()
photo=PhotoImage(file="ahmed_2.gif")
menu_bar=Menu(window)
window.configure(menu=menu_bar)
file_menu=Menu(menu_bar, tearoff=0,font=("MV Boli",10))
menu_bar.add_cascade(menu=file_menu, label="file")
file_menu.add_command(label="open", command=open_file,image=photo,compound=TOP)
file_menu.add_command(label="save", command=save_file)
file_menu.add_separator()
file_menu.add_command(label="Exit", command=quit)
adit_menu=Menu(menu_bar,tearoff=0,font=("MV Boli",10))
menu_bar.add_cascade(menu=adit_menu,label="adit")
adit_menu.add_command(label="copy",command=copy)
adit_menu.add_command(label="cut",command=cut)
adit_menu.add_separator()
adit_menu.add_command(label="paste",command=paste)

window.mainloop()

"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
you open a file
you save file
you copy file
you cut file
you paste file

Process finished with exit code 0



--------------------------------------------------------------------------------------------------------------------------------------------
NOTEBOOK
--------------------------------------------------------------------------------------------------------------------------------------------

from tkinter import *
from tkinter import ttk

window=Tk()
notbook=ttk.Notebook(window) #widget that manage a collection of windows/displays
notbook.pack(expand=True,fill=BOTH)   #expand = expand to fill any space not otherwise used
                                      #fill = fill space on x and y axis
tab_1=Frame(notbook)  #new frame for tab 1
notbook.add(tab_1,text="tab 1")
tab_2=Frame(notbook)  #new frame for tab 2
notbook.add(tab_2,text="tab 2")

label_1=Label(tab_1,text="this is tab 1 say hi",width=50,height=20)
label_1.pack(side=TOP)
button_1=Button(tab_1,text="this is button 1")
button_1.pack(side=BOTTOM)

label_1=Label(tab_2,text="this is tab 2 say hi",width=50,height=20)
label_1.pack(side=TOP)
button_1=Button(tab_2,text="this is button 2")
button_1.pack(side=BOTTOM)

window.mainloop()


--------------------------------------------------------------------------------------------------------------------------------------------
GRID
--------------------------------------------------------------------------------------------------------------------------------------------


grid() = geometry manager that organizes widgets in a table-like structure in a parent

from tkinter import *

window=Tk()

title_label=Label(window,text="Enter your info",font=("Arial",25)).grid(row=0,column=0,columnspan=2)

first_name_label=Label(window,text="first name:",bg="red",width=20).grid(row=1,column=0)
first_name_entry=Entry(window).grid(row=1,column=1)

last_name_label=Label(window,text="last name:",bg="green",width=15).grid(row=2,column=0)
last_name_entry=Entry(window).grid(row=2,column=1)

email_label=Label(window,text="email:",bg="blue",width=10).grid(row=3,column=0)
email_entry=Entry(window).grid(row=3,column=1)

submit_button=Button(window,text="Submit").grid(row=4,columnspan=2,column=0)

window.mainloop()



from tkinter import *
from tkinter.ttk import *
import time

def start():
    tasks=100
    x=0
    while x<tasks:
        time.sleep(0.1)
        bar["value"]+=1
        x+=1
        percent.set(str(int((x/tasks)*100))+"%")
        task.set(str(x)+"/"+str(tasks)+" task completed")
        window.update_idletasks()
        print(bar["value"])



window=Tk()
task=StringVar()
percent=StringVar()
bar=Progressbar(window,orient=HORIZONTAL,length=500,)
bar.pack(padx=10)
percent_label=Label(window,textvariable=percent).pack()
task_label=Label(window,textvariable=task).pack()
button=Button(window,text="download",command=start)
button.pack()

window.mainloop()

"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
1.0
2.0
3.0
to
99.0
100.0

Process finished with exit code 0




--------------------------------------------------------------------------------------------------------------------------------------------
CANVAS
--------------------------------------------------------------------------------------------------------------------------------------------

canvas = widget that is used to draw graphs, plots, images in a window

from tkinter import *


window=Tk()
canvas=Canvas(window,height=500,width=500)
canvas.pack()

canvas.create_line(0,0,500,500,width=5,fill="blue")
canvas.create_line(500,0,0,500,width=5,fill="red")
canvas.create_rectangle(100,100,400,400,width=5,fill="black",outline="green")
canvas.create_rectangle(200,200,300,300,width=5,fill="green",outline="red")
points=[250,100,400,400,100,400]
canvas.create_polygon(points,fill="green",outline="red",width=5)
canvas.create_oval(100,100,200,400,fill="yellow",outline="red",width=5)
canvas.create_arc(100,100,400,400,fill="red",width=5,outline="blue",style=PIESLICE,start=90,extent=180)

canvas.create_arc(100,100,400,400,fill="red",extent=180,width=10)
canvas.create_arc(100,100,400,400,fill="white",extent=180,start=180,width=10)
canvas.create_oval(200,200,300,300,fill="white",width=10)

window.mainloop()

--------------------------------------------------------------------------------------------------------------------------------------------
KEY EVENT
--------------------------------------------------------------------------------------------------------------------------------------------



widget.baind(event,function

from tkinter import *

def dosomthing(event):
    key=event.keysym
    label.configure(text=key)

    print("you pressed: "+key)
window=Tk()
window.bind("<Key>",dosomthing)
label=Label(window,font=("Helvetica",100))
label.pack()
window.mainloop()



"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
you pressed: Up
you pressed: Down
you pressed: Left
you pressed: Right
you pressed: w
you pressed: s
you pressed: a
you pressed: d

Process finished with exit code 0




--------------------------------------------------------------------------------------------------------------------------------------------
MOUSE EVENT
--------------------------------------------------------------------------------------------------------------------------------------------


from tkinter import *

def dosomething(event):
    print("mouse coordinates: x:"+str(event.x)+", y:"+str(event.y))

window=Tk()

window.bind("<Button-1>",dosomething) #left mouse click
window.bind("<Button-2>",dosomething) #scroll wheel
window.bind("<Button-3>",dosomething) #right mouse click
window.bind("<ButtonRelease>",dosomething)
window.bind("<Enter>",dosomething) #Enter the window
window.bind("<Leave>",dosomething) #leave the window
window.bind("<Motion>",dosomething) #where the mouse moved


window.mainloop()


"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
mouse coordinates: x:4, y:5
mouse coordinates: x:91, y:90
mouse coordinates: x:194, y:195

Process finished with exit code 0




from tkinter import *

def drag_start(event):
    widget=event.widget
    widget.startX=event.x
    widget.startY=event.y
def drag_motion(event):
    widget = event.widget
    x=widget.winfo_x()-widget.startX+event.x
    y=widget.winfo_y()-widget.startY+event.y
    widget.place(x=x,y=y)
window=Tk()
label=Label(window,background="red",width=10,height=5)
label.place(x=0,y=0)

label2=Label(window,background="blue",width=10,height=5)
label2.place(x=100,y=100)

label.bind("<Button-1>",drag_start)
label.bind("<B1-Motion>",drag_motion)

label2.bind("<Button-1>",drag_start)
label2.bind("<B1-Motion>",drag_motion)


window.mainloop()

--------------------------------------------------------------------------------------------------------------------------------------------
MOVE IMAGES ON A WINDOW
--------------------------------------------------------------------------------------------------------------------------------------------


from tkinter import *

def move_up(event):
    label.place(x=label.winfo_x(),y=label.winfo_y()-10)

def move_down(event):
    label.place(x=label.winfo_x(),y=label.winfo_y()+10)

def move_left(event):
    label.place(x=label.winfo_x()-10,y=label.winfo_y())

def move_right(event):
    label.place(x=label.winfo_x()+10,y=label.winfo_y())
window=Tk()
window.geometry("500x500")

window.bind("<w>",move_up)
window.bind("<s>",move_down)
window.bind("<a>",move_left)
window.bind("<d>",move_right)

window.bind("<Up>",move_up)
window.bind("<Down>",move_down)
window.bind("<Left>",move_left)
window.bind("<Right>",move_right)


myimage=PhotoImage(file="ahmed_2.gif")
label=Label(window,image=myimage)
label.place(x=0,y=0)


window.mainloop()



--------------------------------------------------------------------------------------------------------------------------------------------
MOVE IMAGE ON A CANVAS
--------------------------------------------------------------------------------------------------------------------------------------------



from tkinter import *

def move_up(event):
    canvas.move(myimage,canvas.winfo_x(),-10)

def move_down(event):
    canvas.move(myimage,canvas.winfo_x(),10)

def move_left(event):
    canvas.move(myimage,-10,canvas.winfo_y())

def move_right(event):
    canvas.move(myimage,10,canvas.winfo_y())


window=Tk()

window.bind("<w>",move_up)
window.bind("<s>",move_down)
window.bind("<a>",move_left)
window.bind("<d>",move_right)

window.bind("<Up>",move_up)
window.bind("<Down>",move_down)
window.bind("<Left>",move_left)
window.bind("<Right>",move_right)

canvas=Canvas(window,width=500,height=500)
canvas.pack()


photoimage=PhotoImage(file="ahmed_2.gif")
myimage=canvas.create_image(0,0,image=photoimage,anchor=NW)


window.mainloop()


from tkinter import *
import time

WIDTH=500
HEIGHT=500
xvelocity=4
yvelocity=2

window=Tk()
canvas=Canvas(window,width=WIDTH,height=HEIGHT)
canvas.pack()

photo_image=PhotoImage(file="ahmed_2.gif")
my_image=canvas.create_image(0,0,image=photo_image,anchor=NW)

image_width=photo_image.width()
image_height=photo_image.height()


while True:
    coordinates=canvas.coords(my_image)
    print(coordinates)
    if coordinates[0]>=WIDTH-image_width or coordinates[0]<0:
        xvelocity=-xvelocity
    if coordinates[1]>=HEIGHT-image_height or coordinates[1]<0:
        yvelocity=-yvelocity
    canvas.move(my_image,xvelocity,yvelocity)
    window.update()
    time.sleep(0.01)

window=mainloop()


"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
[0.0, 0.0]
[4.0, 2.0]
[8.0, 4.0]

Process finished with exit code -1073741510 (0xC000013A: interrupted by Ctrl+C)



from tkinter import *
from ball import *
import time
class Ball:
    def __init__(self,canvas,x,y,diameter,xvelocity,yvelocity,color):
        self.canvas=canvas
        self.image=canvas.create_oval(x,y,diameter,diameter,fill=color)
        self.xvelocity=xvelocity
        self.yvelocity=yvelocity
    def move(self):
        coordinates=self.canvas.coords(self.image)
        print(coordinates)
        if coordinates[2]>=self.canvas.winfo_width() or coordinates[0]<0:
            self.xvelocity=-self.xvelocity

        if coordinates[3]>=self.canvas.winfo_height() or coordinates[1]<0:
            self.yvelocity=-self.yvelocity

        self.canvas.move(self.image,self.xvelocity,self.yvelocity)

window=Tk()

WIDTH=500
HEIGHT=500

canvas=Canvas(window,width=WIDTH,height=HEIGHT)
canvas.pack()

volley_ball=Ball(canvas,0,0,100,1,2,"white")
tennis_ball=Ball(canvas,0,0,20,8,9,"yellow")
basket_ball=Ball(canvas,0,0,125,3,2,"orange")
foot_ball=Ball(canvas,0,0,70,5,7,"black")
while True:
    volley_ball.move()
    tennis_ball.move()
    basket_ball.move()
    foot_ball.move()
    window.update()
    time.sleep(0.01)

window.mainloop()




"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
[0.0, 0.0, 100.0, 100.0]
[0.0, 0.0, 20.0, 20.0]

Process finished with exit code -1073741510 (0xC000013A: interrupted by Ctrl+C)


from tkinter import *
import time

def update():
    time_string=time.strftime("%I:%M:%S %p")
    time_label.configure(text=time_string)

    day_string=time.strftime("%A")
    day_label.configure(text=day_string)

    date_string = time.strftime("%B %b, %Y")
    date_label.configure(text=date_string)

    window.after(1000,update)

window=Tk()

time_label=Label(window,font=("Arial",50),foreground="#00ff00",background="#000000")
time_label.pack()

day_label=Label(window,font=("Arial",25),foreground="red",background="white")
day_label.pack()

date_label=Label(window,font=("Ink Free",25),foreground="red",background="white")
date_label.pack()

update()


window.mainloop()



--------------------------------------------------------------------------------------------------------------------------------------------
EMAIL SEND
--------------------------------------------------------------------------------------------------------------------------------------------

import smtplib

sender= "sander@gmail.com"
recever="receiver@gmail.com"
password="password123"
subject="python email test"
body="I wore an email! :D"

header
message=f"""From: Snoop Dogg{sender}
to:Nicholsa Cage{recever}

subject:{subject}\n
{body}

"""

server=smtplib.SMTP("smtp.gmail.com",587)
server.starttls()

try:
    server.login(sender, password)
    print("logged in >>>>>")
    server.sendmail(sender,recever,message)
    print("Email has been sent!")
except smtplib.SMTPAuthenticationError:
    print("unabel to sing in")

--------------------------------------------------------------------------------------------------------------------------------------------
run .py file with cmd
--------------------------------------------------------------------------------------------------------------------------------------------


save file as .py (python file)
go to command prompt
navigate to directory w/ your file: cd C:\user\Omer_tiya\Desktop
invoke python interpreter + script: python hello_world.py

print("Hello World!")
name=input("what your name?:")
print("hello "+name+":) naice to meet you")


Microsoft Windows [Version 10.0.10240]
(c) 2015 Microsoft Corporation. All rights reserved.

C:\Users\Omer Tiya> cd C:\Users\Omer Tiya\Desktop

C:\Users\Omer Tiya\Desktop>python main.py
Hello World!
what your name?:omer tiya
hello omer tiya:) naice to meet you

C:\Users\Omer Tiya\Desktop>



--------------------------------------------------------------------------------------------------------------------------------------------
python pip
--------------------------------------------------------------------------------------------------------------------------------------------

pip = package manager fot packages and modules from python package index

              inclouded for python version 3.4+
              open command prompt


          help:                    pip
          check:                   pip --version
          update:                  pip install --upgrade pip
          installed packages:      pip list
          check outdated packages: pip list --outdated
          install a package:       pip install "package name"





--------------------------------------------------------------------------------------------------------------------------------------------
pyinstaller
--------------------------------------------------------------------------------------------------------------------------------------------

window defender may prevent you from running
make sure pip and pyinstaller are installed / updated


cd to dirctory that contains your .py file
pyinstaller >>>
              -F          (all in 1 file)
              -w          (removes terinal window)
              -i icon.ico (add custon icon to .exe)
              clock.py    (name of your main python file)

 .exe is located in the dist folder

C:\Users\Omer Tiya\Desktop\1x>pyinstaller -w -i Artboard_1.png s.r.c.s_Warehouse_expenses.py

-----------------------------------------------------------------
TYPE OF WINDOW SCREEN
---------------------------------------------------------
#Import the tkinter library
from tkinter import *

#Create an instance of tkinter frame
win = Tk()
win.geometry("700x350")

#Create a Label to print the Name
label= Label(win, text="This is a New Line Text", font= ('Helvetica 14 bold'), foreground= "red3")
label.pack()


#*THIS WILL TAKE THE FULL SCREEN
win.wm_attributes('-fullscreen', 'True')
win.mainloop()

#ANOTHER TYPE OF THE WENDOW SCREEN


_tkinter.TclError: bad attribute "fullscreen": must be -alpha, -transparentcolor, -disabled, -fullscreen, -toolwindow, or -topmost


--------------------------------------------------------------------------------------------------------------------------------------------
python Calculator
--------------------------------------------------------------------------------------------------------------------------------------------

from tkinter import*

def button_press(num):
    global equation_text
    equation_text=equation_text+str(num)
    equation_label.set(equation_text)

def equals():
    global equation_text
    try:
        total=str(eval(equation_text))
        equation_label.set(total)

        equation_text=total
    except SyntaxError:
        equation_label.set("Syntax error")
        equation_text=""
    except ZeroDivisionError:
        equation_label.set("arithmetic error")
        equation_text=""
def claear():
    global equation_text
    equation_label.set("")
    equation_text=""

window=Tk()
window.title("Calculator program")
window.geometry("500x500")

equation_text=""

equation_label=StringVar()

labda=Label(window, textvariable=equation_label, font=("consolas", 20), background="white", width=24, height=2)
labda.pack()

frame=Frame(window)
frame.pack()

button_1=Button(frame, text=1, height=4, width=9, font=35, command=lambda:button_press(1))
button_1.grid(row=0,column=0)
button_2=Button(frame, text=2, height=4, width=9, font=35, command=lambda:button_press(2))
button_2.grid(row=0,column=1)
button_3=Button(frame, text=3, height=4, width=9, font=35, command=lambda:button_press(3))
button_3.grid(row=0,column=2)
button_4=Button(frame, text=4, height=4, width=9, font=35, command=lambda:button_press(4))
button_4.grid(row=1,column=0)
button_5=Button(frame, text=5, height=4, width=9, font=35, command=lambda:button_press(5))
button_5.grid(row=1,column=1)
button_6=Button(frame, text=6, height=4, width=9, font=35, command=lambda:button_press(6))
button_6.grid(row=1,column=2)
button_7=Button(frame, text=7, height=4, width=9, font=35, command=lambda:button_press(7))
button_7.grid(row=2,column=0)
button_8=Button(frame, text=8, height=4, width=9, font=35, command=lambda:button_press(8))
button_8.grid(row=2,column=1)
button_9=Button(frame, text=9, height=4, width=9, font=35, command=lambda:button_press(9))
button_9.grid(row=2,column=2)
button_0=Button(frame, text=0, height=4, width=9, font=35, command=lambda:button_press(0))
button_0.grid(row=3,column=0)
plus=Button(frame, text="+", height=4, width=9, font=35, command=lambda:button_press("+"))
plus.grid(row=0,column=3)
minus=Button(frame, text="-", height=4, width=9, font=35, command=lambda:button_press("-"))
minus.grid(row=1,column=3)
multiply=Button(frame, text="*", height=4, width=9, font=35, command=lambda:button_press("*"))
multiply.grid(row=2,column=3)
divid=Button(frame, text="/", height=4, width=9, font=35, command=lambda:button_press("/"))
divid.grid(row=3,column=3)
equal=Button(frame, text="=", height=4, width=9, font=35, command=equals)
equal.grid(row=3,column=2)
decimal=Button(frame, text=".", height=4, width=9, font=35, command=lambda:button_press("."))
decimal.grid(row=3,column=1)
clear=Button(window, text="clear", height=4, width=20, font=35, command=claear)
clear.pack()

window.mainloop()

import os
from tkinter import *
from tkinter import filedialog ,colorchooser,font
from tkinter.messagebox import *
from tkinter.filedialog import *


def change_color():
    color=colorchooser.askcolor(title="pick a color or else")
    text_area.configure(fg=color[1])
def change_font(*args):
    text_area.configure(font=(font_name.get(),size_box.get()))

def new_file():
    window.title("Untitiled")
    text_area.delete(1.0,END)

def open_file():
    file=askopenfilename(defaultextension=".txt",
                         file=[("All File","*.*"),
                               ("text documents","*,txt")])
    try:
        window.title(os.path.basename(file))
        text_area.delete(1.0,END)
        file=open(file,"r")
        text_area.insert(1.0,file.read())
    except Exception:
        print("could't read file")
    finally:
        file.close()
def save_file():
    file=filedialog.asksaveasfilename(initialdir="unititled.txt",
                                      defaultextension=".txt",
                                      filetypes=[("All File","*.*"),
                                                 ("text documents","*,txt")])
    if file is None:
        return
    else:
        try:
            window.title(os.path.basename(file))
            file=open(file,"W")
            file.write(text_area.get(1.0,END))
        except Exception:
            print("couldn't save file")
        finally:
            file.close()
def cut():
    text_area.event_generate("<<Cut>>")

def copy():
    text_area.event_generate("<<Copy>>")

def peste():
    text_area.event_generate("<<Paste>>")

def about():
    showinfo(title="about this program ",message="this is a program written by you")

def quit():
    window.destroy()


window=Tk()
window.title("Text editor program")
file=None

window_width=500
window_height=500
screen_width=window.winfo_screenwidth()
screen_height=window.winfo_screenheight()

x=int((screen_width/2)-(window_width/2))
y=int((screen_height/2)-(window_height/2))
window.geometry("{}x{}+{}+{}".format(window_width,window_height,x,y))

font_name=StringVar(window)
font_name.set("Arial")

font_size=StringVar(window)
font_size.set("25")

text_area=Text(window,font=(font_name.get(),font_size.get()))

scroll_bar=Scrollbar(text_area,orient=VERTICAL)
window.grid_rowconfigure(0,weight=1)
window.grid_columnconfigure(0,weight=1)

text_area.grid(sticky=N+E+S+W)
frame=Frame(window)
frame.grid()

color_button=Button(frame,text="color",command=change_color)
color_button.grid(row=0,column=0)

font_box=OptionMenu(frame,font_name,*font.families(),command=change_font )
font_box.grid(row=0,column=1)

size_box=Spinbox(frame,from_=1,to=100,textvariable=font_size,command=change_font)
size_box.grid(row=0,column=2)

menu_bar=Menu(window)
window.configure(menu=menu_bar)

file_menu=Menu(menu_bar,tearoff=0)
menu_bar.add_cascade(menu=file_menu,label="File")

file_menu.add_command(label="New",command=new_file)
file_menu.add_command(label="open",command=open_file)
file_menu.add_command(label="save",command=save_file)
file_menu.add_separator()
file_menu.add_command(label="exit",command=quit)

edit_menu=Menu(menu_bar,tearoff=0)
menu_bar.add_cascade(menu=edit_menu,label="Edit")
edit_menu.add_command(label="Cut",command=cut)
edit_menu.add_command(label="Copu",command=copy)
edit_menu.add_command(label="Paste",command=peste)

help_menu=Menu(menu_bar,tearoff=0)
menu_bar.add_cascade(menu=help_menu,label="help")
help_menu.add_command(label="about",command=about)



scroll_bar.pack(side=RIGHT,fill=Y)
text_area.configure(yscrollcommand=scroll_bar.set)

window.mainloop()



--------------------------------------------------------------------------------------------------------------------------------------------
Tic-tak-toe
--------------------------------------------------------------------------------------------------------------------------------------------

from tkinter import *
import random

def next_turn(row,column):
    global player

    if button[row][column]["text"]=="" and chech_winner()is False:
        if player ==players[0]:
            button[row][column]["text"]=player
            if chech_winner()is False:
                player=players[1]
                label.configure(text=(players[1]+" turn"))

            elif chech_winner()==True:
                label.configure(text=(players[0]+" wins"))
            elif chech_winner()=="Tie":
                label.configure(text="Tie")
        else:
            button[row][column]["text"] = player
            if chech_winner() is False:
                player = players[0]
                label.configure(text=(players[0] + " turn"))

            elif chech_winner() == True:
                label.configure(text=(players[1] + " wins"))
            elif chech_winner() == "Tie":
                label.configure(text="Tie")



def chech_winner():
    for row in range(3):
        if button[row][0]["text"]==button[row][1]["text"]==button[row][2]["text"]!="":
            button[row][0].config(bg="green")
            button[row][1].config(bg="green")
            button[row][2].config(bg="green")

            return True
    for column in range(3):
        if button[0][column]["text"]==button[1][column]["text"]==button[2][column]["text"]!="":
            button[0][column].config(bg="green")
            button[1][column].config(bg="green")
            button[2][column].config(bg="green")
            return True

    if button[0][0]["text"]== button[1][1]["text"]== button[2][2]["text"]!="":
        button[0][0].config(bg="green")
        button[1][1].config(bg="green")
        button[2][2].config(bg="green")

        return True

    elif button[0][2]["text"]== button[1][1]["text"]== button[2][0]["text"]!="":
        button[0][2].config(bg="green")
        button[1][1].config(bg="green")
        button[2][0].config(bg="green")

        return True

    elif empty_spaces() is False:
        for row in range(3):
            for column in range(3):
                button[row][column].config(bg="yellow")
        return "Tie"
    else:
        return False
def empty_spaces():
    spaces=9
    for row in range(3):
        for column in range(3):
            if button[row][column]["text"] !="":
                spaces-=1

    if spaces == 0:
        return False
    else:
        return True

def new_game():
    global player

    player=random.choice(players)
    label.config(text=player+" turn")
    for row in range(3):
        for column in range(3):
            button[row][column].config(text="",bg="#F0F0F0")

window=Tk()
window.title("Tic-tak-toe")

players=["x","o"]
player=random.choice(players)

button=[[0,0,0],
        [0,0,0],
        [0,0,0]]


label=Label(window,text=player+" turn",font=("consolas",40))
label.pack(side=TOP)

reset_button=Button(text="restart",font=("consolas",20),command=new_game)
reset_button.pack(side=TOP)

frame=Frame(window)
frame.pack()


for row in range(3):
    for column in range(3):
        button[row][column]=Button(frame,text="",font=("consolas",40),width=5,height=2,
                                   command=lambda row=row,column=column:next_turn(row,column))
        button[row][column].grid(row=row,column=column)

window.mainloop()

--------------------------------------------------------------------------------------------------------------------------------------------
SNAKE GAME
--------------------------------------------------------------------------------------------------------------------------------------------


from tkinter import *
import random


GAME_WIDTH=500
GAME_HEIGHT=500
SPEED=100
SPACE_SIZE=50
BODY_PARTS=3
SNAKE_COLOR="#00FF00"
FOOD_COLOR="#FF0000"
BACKGROUND_COLOR="#000000"


class Snake:
    def __init__(self):
        self.body_size=BODY_PARTS
        self.coordinates=[]
        self.squares=[]

        for i in range(0,BODY_PARTS):
            self.coordinates.append([0,0])

        for x,y in self.coordinates:
            square=canvas.create_rectangle(x,y,x+SPACE_SIZE,y+SPACE_SIZE,fill=SNAKE_COLOR,tags="snake")
            self.squares.append(square)

class Food:
    def __init__(self):
        x=random.randint(0,(GAME_WIDTH/SPACE_SIZE)-1)*SPACE_SIZE
        y=random.randint(0,(GAME_HEIGHT/SPACE_SIZE)-1)*SPACE_SIZE

        self.coordonates=[x,y]
        print(x,y)

        canvas.create_oval(x,y,x+SPACE_SIZE,y+SPACE_SIZE,fill=FOOD_COLOR,tags="food")

def next_tuen(snake,food):
    x,y=snake.coordinates[0]

    if direction=="up":
        y-=SPACE_SIZE
    elif direction=="down":
        y += SPACE_SIZE
    elif direction=="left":
        x -= SPACE_SIZE
    elif direction=="right":
        x += SPACE_SIZE

    snake.coordinates.insert(0,(x,y))

    square=canvas.create_rectangle(x,y,x+SPACE_SIZE,y+SPACE_SIZE,fill=SNAKE_COLOR,tags="snake")
    snake.squares.insert(0,square)

    if x==food.coordonates[0] and y==food.coordonates[1]:
        global score
        score+=1
        label.config(text="Score:{}".format(score))

        canvas.delete("food")

        food=Food()

    else:
        del snake.coordinates[-1]
        canvas.delete(snake.squares[-1])
        del snake.squares[-1]

    if check_collisions(snake):
        game_over()

    else:
        window.after(SPEED,next_tuen,snake,food)


def change_direction(new_direction):
    global direction

    if new_direction=="left":
        if direction!="right":
            direction=new_direction

    elif new_direction=="right":
        if direction!="left":
            direction=new_direction

    elif new_direction=="up":
        if direction!="down":
            direction=new_direction

    elif new_direction=="down":
        if direction!="up":
            direction=new_direction
def check_collisions(snake):
    x,y=snake.coordinates[0]
    if x<0 or x>=GAME_WIDTH:
        print("game over")
        return True
    elif y<0 or y>=GAME_HEIGHT:
        print("game over")
        return True
    for body_part in snake.coordinates[1:]:
        if x == body_part[0] and y==body_part[1]:
            print("game over ")
            return True

    return False

def game_over():
    canvas.delete(ALL)
    canvas.create_text(canvas.winfo_width()/2,canvas.winfo_height()/2,font=("consolas",70),text="GAME OVER",fill="red",tags="gameover")


window=Tk()
window.title("Snake game")
window.resizable(False,False)

score=0
direction="down"

label=Label(window,text="Score:{}".format(score),font=("consolas",40))
label.pack()

canvas=Canvas(window,bg=BACKGROUND_COLOR,height=GAME_HEIGHT,width=GAME_WIDTH)
canvas.pack()

window.update()

window_width=window.winfo_width()
window_height=window.winfo_height()
screen_width=window.winfo_screenwidth()
screen_height=window.winfo_screenheight()
x=int((screen_width/2)-(window_width/2))
y=int((screen_height/2)-(window_height/2))

window.geometry(f"{window_width}x{window_height}+{x}+{y}")

window.bind("<Left>",lambda event:change_direction("left"))
window.bind("<Right>",lambda event:change_direction("right"))
window.bind("<Up>",lambda event:change_direction("up"))
window.bind("<Down>",lambda event:change_direction("down"))

snake=Snake()
food=Food()
next_tuen(snake,food)
window.mainloop()



"F:\omer_tiya python book\py_book projacet\main_py_book\main\main_py_book\Scripts\python.exe" "F:/omer_tiya python book/py_book projacet/main_py_book/main/main.py"
400 250
0 150
150 350
game over

Process finished with exit code 0

-------------------------------------------------------------------------------------------------------
Autohiding Scrollbars using Python-tkinter
--------------------------------------------------------------------------------------------------------
